{"version":3,"sources":["reducers/countriesReducer.js","reducers/selectedCountryReducer.js","styled/index.js","reducers/themeReducer.js","reducers/index.js","store.js","components/Header.js","components/App.js","index.js"],"names":["countriesReducer","state","type","payload","isArray","Array","selectedCountryReducer","console","log","name","region","population","subregion","capital","nativeName","flag","topLevelDomain","currencies","languages","modLanguages","modTopLevelDomain","modCurrencies","i","length","newState","darkTheme","element","text","background","input","lightTheme","fonts","themeReducer","newTheme","rootReducer","combineReducers","countries","selectedCountry","theme","store","createStore","reducers","applyMiddleware","thunk","bold","homeSize","StyledHeader","styled","header","props","bg","Header","nameOfMode","dispatch","useDispatch","onClick","Details","lazy","Home","fontFamily","Global","createGlobalStyle","StyledBody","div","App","isSelected","useSelector","main","fallback","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cfdab1b0.chunk.js","sourcesContent":["const countriesReducer = (state=null, {type, payload}) => {\n    const {isArray} = Array;\n    switch(type){\n        case 'FETCH_COUNTRIES_BY_REGION':\n            payload=(isArray(payload))?payload:null;\n            return payload;\n        case 'FETCH_ALL_COUNTRIES':\n            return payload;\n        case 'FETCH_COUNTRY_BY_NAME':\n            payload=(isArray(payload))?payload:null;\n            return payload;\n        default:\n            return state;\n    }\n}\nexport default countriesReducer;","const selectedCountryReducer = (state=null, {payload, type}) => {\n    switch(type){\n        case 'SELECT_COUNTRY':\n            console.log(payload);\n            const{name, region, population, subregion, capital, nativeName, flag, topLevelDomain, currencies, languages} = payload;\n            let modLanguages=languages[0].name, modTopLevelDomain=topLevelDomain[0], modCurrencies=currencies[0].name;\n            for(let i=1;i<languages.length;i++){\n                modLanguages+=`, ${languages[i].name}`;\n            }\n            for(let i=1;i<topLevelDomain.length;i++){\n                modTopLevelDomain+=`, ${topLevelDomain[i]}`;\n            }\n            for(let i=1;i<currencies.length;i++){\n                modCurrencies+=`, ${currencies[i].name}`;\n            }\n            console.log(`${modLanguages}\\n${modCurrencies}\\n${modTopLevelDomain}`);\n            const newState = {\n                name,\n                region,\n                population,\n                subregion,\n                capital,\n                nativeName,\n                flag,\n                topLevelDomain: modTopLevelDomain,\n                currencies: modCurrencies,\n                languages: modLanguages,\n            }\n            return newState;\n        case 'RESET':\n            return null;\n        default:\n            return state;\n    }\n}\nexport default selectedCountryReducer;","import styled from 'styled-components';\n\nexport const darkTheme = {\n    name: \"dark\",\n    element: \"hsl(209, 23%, 22%)\",\n    text:'hsl(0, 0%, 100%)',\n    background: 'hsl(207, 26%, 17%)',\n    input: \"white\",\n}\n\nexport const lightTheme = {\n    name: \"light\",\n    element:\"hsl(0, 0%, 100%)\",\n    text:'hsl(200, 15%, 8%)',\n    background: 'hsl(0, 0%, 98%)',\n    input:'hsl(0, 0%, 52%)'\n}\n\nexport const fonts = {\n    //weights\n    bold: \"800\",\n    regular: \"600\",\n    light: \"300\",\n    fontFamily: \"Lato\",\n    homeSize: \"14px\",\n    detailSize: \"16px\"\n}","import {lightTheme, darkTheme} from '../styled';\nconst themeReducer = (state=darkTheme, {type})=> {\n    switch(type){\n        case 'SWITCH_MODE':\n            let newTheme=(state.name===\"light\")? darkTheme: lightTheme;\n            console.log(newTheme);\n            return newTheme\n        default:\n\n            return state;\n    }\n};\nexport default themeReducer;","import countriesReducer from './countriesReducer';\nimport selectedCountryReducer from './selectedCountryReducer';\nimport themeReducer from './themeReducer';\nimport { combineReducers } from 'redux';\nconst rootReducer = combineReducers({\n    countries: countriesReducer,\n    selectedCountry: selectedCountryReducer,\n    theme: themeReducer\n});\n\nexport default rootReducer;","import reducers from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nexport default store;","import React from 'react'\nimport styled from 'styled-components'\nimport { fonts } from '../styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst { bold, regular, light, homeSize} = fonts;\nconst StyledHeader = styled.header`\n    color: ${props => props.text};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    width: 100%;\n    height: 50px;\n    background: ${props=> props.bg};\n    box-shadow: 0 0 2.5px 0 rgba(168,168,168,1);\n   > h1, > p {\n       font-size: ${homeSize};\n       font-weight: ${bold};\n   }\n   > p:hover {\n       cursor: pointer;\n       }\n`;\nconst Header = ({theme}) => {\n    const {element, text, name} = theme;\n    const nameOfMode = (name===\"light\")? \"Dark\": \"Light\";\n    const dispatch = useDispatch();\n    return (\n        <StyledHeader bg={element} text={text}>\n            <h1>Where in the world</h1>\n    <p onClick={()=>dispatch({type: \"SWITCH_MODE\"})}><span></span>{nameOfMode} mode</p>\n        </StyledHeader>\n    )\n}\n\nexport default Header\n","import React, {lazy, Suspense,Fragment} from 'react'\nimport {useSelector} from 'react-redux';\nimport Header from './Header';\nimport styled, {createGlobalStyle}from 'styled-components';\nimport { fonts } from '../styled';\nconst Details = lazy(()=>import(\"./Details\"));\nconst Home = lazy(()=>import(\"./Home\"));\nconst {fontFamily} = fonts;\n\n\nconst Global = createGlobalStyle`\n    * {\n        font-family: ${fontFamily};\n        padding: 0;\n        margin: 0;\n        box-sizing: border-box;\n    }\n`;\nconst StyledBody = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    width: 100vw;\n    min-height: 100vh;\n    background: ${ props => props.bg };\n    padding: 0 100px;\n    > div {\n        color: ${props=>props.text};\n        width: 100vw;\n        height: 70vh;\n        display: flex;\n        justify-content: center;\n        align-items: center\n    }\n`;\nconst App = () => {\n    const isSelected = useSelector(state=>state.selectedCountry);\n    const theme = useSelector(state => state.theme);\n    const {text, background} = theme;\n    const main = (!isSelected)? <Home theme={theme} /> : <Details theme={theme}/>;\n    return (\n        <Fragment>\n        <Global />\n        <StyledBody text={text} bg={background}>\n            <Header theme={theme}/>\n            <Suspense fallback={()=>(<div>Loading...</div>)}>\n                {main}\n            </Suspense>\n        </StyledBody>\n        </Fragment>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport App from './components/App';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.querySelector(\"#root\"));"],"sourceRoot":""}