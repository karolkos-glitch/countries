{"version":3,"sources":["apis/index.js","components/Search.js","actions/index.js","components/Country.js","components/Home.js"],"names":["countries","a","fetch","response","json","result","countryName","name","countriesByRegion","StyledForm","styled","form","props","text","bg","connect","fetchDataByName","dispatch","payload","type","fetchDataByRegion","theme","useForm","handleSubmit","register","element","renderedList","map","item","onClick","key","onSubmit","values","ref","placeholder","StyledArticle","article","Country","flag","region","capital","population","useDispatch","alt","src","fetchDataAll","useSelector","state","console","log","numericCode"],"mappings":"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","file":"static/js/5.cc200053.chunk.js","sourcesContent":["export const countries = async () => {\n    const response = await fetch(\"https://restcountries.eu/rest/v2/region/europe\");\n    const result = await response.json();\n    return result;\n}\nexport const countryName = async (name) => {\n    const response = await fetch(`https://restcountries.eu/rest/v2/name/${name}`);\n    const result = await response.json();\n    return result;\n}\nexport const countriesByRegion = async (name) => {\n    const response = await fetch(`https://restcountries.eu/rest/v2/region/${name}`);\n    const result = await response.json();\n    return result;\n}","import React from 'react'\nimport {useForm} from 'react-hook-form';\nimport styled from 'styled-components';\nimport {  connect } from 'react-redux';\nimport { fetchDataByName, fetchDataByRegion } from '../actions';\n\nconst StyledForm = styled.form`\n    width: 100%;\n    height: 200px;\n    position: relative;\n    padding: 50px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: ${props=>props.text};\n    > input {\n        color: ${props=>props.text};\n        width: 450px;\n        height: 35px;\n        border-radius: 15px;\n        padding: 0 20px;\n        background-color: ${props=>props.bg};\n        border: none;\n        box-shadow: 0 0 2.5px 0 rgba(168,168,168,1); \n    }\n    ul {\n        :hover  li {\n            opacity: 1;\n        }\n        list-style-type: none;\n        > li {\n            position: relative;\n        }\n        li {\n            border-bottom: 1px solid white;\n            box-shadow: 0 0 2.5px 0 rgba(168,168,168,1); \n            background-color: ${props=>props.bg};\n            width: 175px;\n            height: 35px;\n            padding: 5px 20px;\n            :hover {\n                cursor: pointer;\n                background-color: #FF0000;\n                }\n            ul {\n                position: absolute;\n                left: 0;\n                top: 35px;\n            }\n            ul > li {\n                opacity: .0;\n                transition: all 0.25s;\n            }\n            }\n        }\n    }\n`;\nconst Search = ({theme, fetchDataByName, fetchDataByRegion}) => {\n    const {handleSubmit, register} = useForm();\n    const onSubmit = values => {\n        const {countryName}=values;\n        if(countryName)fetchDataByName(countryName);\n    }\n    const { element, text } = theme;\n    const regions = [\"Africa\",\"Europe\",\"Americas\",\"Asia\",\"Oceania\"];\n    const renderedList = regions.map(item=><li onClick={()=>fetchDataByRegion(item)} key={item}>{item}</li>)\n    return (\n        <StyledForm onSubmit={handleSubmit(onSubmit)} text={text} bg={element}>\n            <input ref={register()} name=\"countryName\" type=\"text\" placeholder=\"Look for a country\" />\n            <ul>\n                <li>Filtered by region\n                    <ul>\n                        {renderedList}\n                    </ul>\n                </li>\n            </ul>\n        </StyledForm>\n    )\n}\n\nexport default connect(null,{fetchDataByName, fetchDataByRegion})(Search)\n","import {countries, countriesByRegion, countryName} from '../apis';\n\nexport const fetchDataAll = () => async (dispatch) => {\n    const payload= await countries();\n    dispatch({type: 'FETCH_ALL_COUNTRIES', payload});\n}\n\nexport const fetchDataByName = (name) => async (dispatch) => {\n    const payload = await countryName(name);\n    dispatch({type: 'FETCH_COUNTRY_BY_NAME', payload});\n}\n\nexport const fetchDataByRegion = (name) => async (dispatch) => {\n    const payload = await countriesByRegion(name);\n    dispatch({type: 'FETCH_COUNTRIES_BY_REGION', payload})\n}","import React from 'react'\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nconst StyledArticle = styled.article`\n    width: 300px;\n    height: 325px;\n    box-sizing: border-box;\n    margin: 20px;\n    border-radius: 10px;\n    box-shadow: 0 0 2.5px 0 rgba(168,168,168,1);\n    background-color: ${props=>props.bg};\n    color: ${props=>props.text};\n    overflow: hidden;\n    :hover {\n        cursor: pointer;\n    }\n    > figure {\n        width: 300px;\n        height: 175px;\n    }\n    > figure > img {\n        width: 300px;\n        height: 175px;\n    }\n    > section {\n        padding: 20px;\n        display: flex;\n        justify-content: flex-start;\n        align-items: flex-start;\n        flex-wrap: wrap;\n        height: 150px;\n        \n        > h2 {\n            width: 100%;\n            text-align: left;\n        }\n        > p {\n            align-self: flex-end;\n        }\n    }\n`;\nconst Country = ({item, theme}) => {\n    const {element, text} = theme;\n    const {name, flag, region, capital, population} = item;\n    const dispatch = useDispatch();\n    return (\n        <StyledArticle bg={element} text={text} onClick={()=>{\n            dispatch({type: 'SELECT_COUNTRY', payload: item});\n        }}>\n            <figure>\n                <img alt={`${name}'s flag`} src={flag} />\n            </figure>\n            <section>\n                <h2>{name}</h2>\n                <p>\n                    <strong>Population: </strong>{population}<br/>\n                    <strong>Region: </strong>{region}<br/>\n                    <strong>Capital: </strong>{capital}\n                </p>\n            </section>\n        </StyledArticle>\n    )\n}\n\nexport default Country\n","import React, {Fragment} from 'react'\nimport { fetchDataAll } from '../actions';\nimport { connect, useSelector } from 'react-redux';\nimport Search from './Search';\nimport Country from './Country';\nconst Home = ({fetchDataAll,theme}) => {\n    const countries=useSelector(state=>state.countries);\n    (countries)?console.log('hello'):fetchDataAll();\n    const renderedList = (countries)?countries.map(item => <Country key={item.numericCode} item={item} theme={theme}/>):<div>Loading...</div>;\n    return (\n        <Fragment>\n            <Search theme={theme}/>\n            {renderedList}\n        </Fragment>\n    )\n}\nexport default connect(null,{fetchDataAll})(Home)\n"],"sourceRoot":""}