{"version":3,"sources":["components/Details.js"],"names":["StyledButton","styled","button","props","bg","text","StyledArticle","article","Details","theme","element","country","useSelector","state","selectedCountry","name","region","population","subregion","capital","nativeName","flag","topLevelDomain","currencies","languages","dispatch","useDispatch","onClick","type","alt","src"],"mappings":"qoCAMA,IAAMA,EAAeC,IAAOC,OAAV,KAEM,SAAAC,GAAK,OAAEA,EAAMC,MACxB,SAAAD,GAAK,OAAIA,EAAME,QAMtBC,EAAgBL,IAAOM,QAAV,KASN,SAAAJ,GAAK,OAAEA,EAAME,QAqDXG,UA9BC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACPJ,EAAiBI,EAAjBJ,KAAMK,EAAWD,EAAXC,QACPC,EAAUC,aAAY,SAAAC,GAAK,OAAGA,EAAMC,mBACpCC,EAAyGJ,EAAzGI,KAAMC,EAAmGL,EAAnGK,OAAQC,EAA2FN,EAA3FM,WAAYC,EAA+EP,EAA/EO,UAAWC,EAAoER,EAApEQ,QAASC,EAA2DT,EAA3DS,WAAYC,EAA+CV,EAA/CU,KAAMC,EAAyCX,EAAzCW,eAAgBC,EAAyBZ,EAAzBY,WAAYC,EAAab,EAAba,UAC5FC,EAAWC,cACjB,OACI,kBAAC,WAAD,KACA,kBAACpB,EAAD,CAAeD,KAAMA,GACjB,iCACA,kBAACL,EAAD,CAAcK,KAAMA,EAAMD,GAAIM,EAASiB,QAAS,kBAAIF,EAAS,CAACG,KAAK,YAAW,4BAA9E,QACA,gCAAQ,yBAAKC,IAAG,UAAKd,EAAL,WAAoBe,IAAKT,MAEzC,iCACI,4BAAKN,GACL,6BACI,2BAAG,iDAA+BK,GAAe,6BACjD,2BAAG,gDAA8BH,GAAe,6BAChD,2BAAG,4CAA0BD,GAAW,6BACxC,2BAAG,gDAA8BE,GAAc,6BAC/C,2BAAG,6CAA2BC,GAAY,6BAC1C,2BAAG,sDAAoCG,GAAmB,6BAC1D,2BAAG,gDAA8BC,GAAe,6BAChD,2BAAG,+CAA6BC,GAAc","file":"static/js/4.18fd6aac.chunk.js","sourcesContent":["import React from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport { Fragment } from 'react';\n\nconst StyledButton = styled.button`\n    height: 25px;\n    background-color: ${props=>props.bg};\n    color: ${props => props.text};\n    padding: 0 20px;\n    margin: 20px 0;\n    border-radius: 5px;\n    align-self: flex-start;\n`\nconst StyledArticle = styled.article`\n    width: 80%;\n    height: 100vh;\n    display: flex;\n    position: relative;\n    bottom: 100px;\n    justify-content: space-between;\n    flex-wrap: nowrap;\n    align-items: center;\n    color: ${props=>props.text};\n    > section {\n        flex: 1 1;\n        > figure > img {\n            width: 500px;\n            height: 350px;\n        }\n        > h2 {\n            margin: 40px 0;\n            padding: 0 0 0 50px;\n        }\n        > div {\n            display: flex;\n            flex-flow: column wrap;\n            max-height: 200px;\n            align-items: space-between;\n            > p {\n                margin:0 0 0 50px;\n                font-weight: 300;\n            }\n        }\n    }\n`;\nconst Details = ({theme}) => {\n    const {text, element} = theme;\n    const country = useSelector(state=> state.selectedCountry);\n    const{name, region, population, subregion, capital, nativeName, flag, topLevelDomain, currencies, languages} = country;\n    const dispatch = useDispatch();\n    return (\n        <Fragment>\n        <StyledArticle text={text}>\n            <section>\n            <StyledButton text={text} bg={element} onClick={()=>dispatch({type:\"RESET\"})}><p></p>BACK</StyledButton>\n            <figure><img alt={`${name}'s flag`} src={flag} /></figure>\n            </section>\n            <section>\n                <h2>{name}</h2>\n                <div>\n                    <p><strong>Native Name: </strong>{nativeName}</p><br />\n                    <p><strong>Population: </strong>{population}</p><br />\n                    <p><strong>Region: </strong>{region}</p><br />\n                    <p><strong>Sub Region: </strong>{subregion}</p><br />\n                    <p><strong>Capital: </strong>{capital}</p><br />\n                    <p><strong>Top Level Domain: </strong>{topLevelDomain}</p><br />\n                    <p><strong>Currencies: </strong>{currencies}</p><br />\n                    <p><strong>Languages: </strong>{languages}</p><br />\n                </div>\n            </section>\n        </StyledArticle>\n        </Fragment>\n    )\n}\n\nexport default Details\n"],"sourceRoot":""}